/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define SYM 1
// -----------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};

/ {
	behaviors {
                hml: home_row_mod_left {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "balanced";
                    require-prior-idle-ms = <150>;
                    tapping-term-ms = <280>;
                    quick-tap-ms = <175>;
                    bindings = <&kp>, <&kp>;
                    // hold-trigger-key-positions = <5 6 7 8 9>; // List of keys on the right side of the keyboard
                    hold-trigger-on-release;
                };
                hmr: home_row_mod_right {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "balanced";
                    require-prior-idle-ms = <150>;
                    tapping-term-ms = <280>;
                    quick-tap-ms = <175>;
                    bindings = <&kp>, <&kp>;
                    // hold-trigger-key-positions = <0 1 2 3 4>; // List of keys on the left side of the keyboard
                    hold-trigger-on-release;
                 		                             // &kp LSHIFT    &mt SYM BSPC    &mt EXT ENTER       &mt LCTRL SPACE
                };
	};
	keymap {
                compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			&kp  Q       &kp W       &kp E        &kp R         &kp T             &kp Y &kp U         &kp I        &kp O         &kp P 
                        &hml LGUI A  &hml LALT S &hml LCTRL D &hml LSHIFT F &kp G             &kp H &hmr LSHIFT J &hmr LCTRL K &hmr LALT L   &hmr LGUI COLON 
			&kp  Z       &kp X       &kp C        &kp V         &kp B             &kp N &kp M         &kp COMMA    &kp DOT       &kp SINGLE_QUOTE
					                      &kp LSHIFT    &mt SYM BSPC      &kp ENTER &lt LCTRL SPACE
			>;
		};
                sym_layer {
                        label = "Sym.";
                        bindings = <
                        &kp N1        &kp N2           &kp N3           &kp N4           &kp N5           &kp N6    &kp N7            &kp N8         &kp N9         &kp N0
                        &hml LGUI LT  &hml LALT PRCNT  &hml LCTRL LPAR  &hml LSHIFT LBRC &kp LBKT         &kp EQUAL &hmr LSHIFT QMARK &hmr LCTRL SQT &hmr LALT PLUS &hmr LGUI ASTRK
                        &kp GT        &kp DLLR         &kp RPAR         &kp RBRC         &kp RBKT         &kp AT    &kp EXCL          &kp DQUOT      &kp MINUS      &kp FSLH
                                                                        &kp LSHIFT       &trans           &trans    &trans
                        >;
                };

	};
};
